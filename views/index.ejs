<!DOCTYPE html>
<title>Home Title</title>
<script src="https://d3js.org/d3.v6.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
<link rel="stylesheet" type="text/css" href="stylesheets/index.css">
</head>

<%- include('common/header') %>

<body>
<!--start of home page-->
<div class="home-page" id="home">
    <div class = "mapcontainer">
        <div class="euro">
            <svg id="europeMap" class="europe-map" width="800" height="500"></svg>
        </div>

        <div class = "infobox">
            <p id="countryclicked">Country clicked displays here.</p>
            <p id="errorcountryclicked"></p>
            <p id="apidata"></p>
            <p id="apidata2"></p>
        </div>
    </div>

    <!-- This is an Example Graph using Graph.Js Library-->
    <div class="container">

        <div class="graph1">
            <canvas id="chart" width="200" height="200"></canvas>
            <script>

                const ctx = document.getElementById('chart').getContext('2d');
                const myChart1 = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                        datasets: [{
                            label: 'Coronavirus Numbers',
                            data: [100, 234, 432, 456, 754, 400, 370, 300, 450, 320, 100],
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)'
                            ],
                            borderWidth: 1
                        }]
                    }
                });
            </script>
        </div>

        <div class="graph2">

        </div>
    </div>

    <! ---
    This is a D3.Js Map Created By Graham,Eduard and James
    as part of the Major Group Project.

    This Script Will be moved to a Script.Js File after testing.
    --->

    <script>
        // Create an Svg variable
        const svg = d3.select("svg"),
            width = +svg.attr("width")

        // Map and projection
        //
        const projection = d3.geoNaturalEarth1()
            .scale(width / 1.5) // Lower the num closer the zoom
            .translate([200, 700])  // (Horizontal, Vertical)

        let counter = 0;
        let selectedcountry1;
        let selectedcountry2;
        let tempcountry;

        // Load external data from geographic api and use data to project path info from map.
        d3.json("https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson").then(function (data) {
            svg.append("g")
                .selectAll("path")
                .data(data.features)
                .join("path")
                .attr("fill", "#348C31") // Color Of Country
                .attr("d", d3.geoPath().projection(projection))
                .on("mouseover", handleMouseOver)
                .on("mouseout", handleMouseOut)
                .on('click', function(d,i){
                    // Fill country with color onClick
                    d3.select(this).style("fill", '#0000FF');
                    // Chnage HTML to display country ID.
                    document.getElementById("countryclicked").innerHTML = i.properties.name;

                    if(counter === 1 && selectedcountry1 === false){
                        selectedcountry1 === true;
                        d3.select(this).style("fill", '#20bf83');
                        counter++;
                    }
                    if(counter === 1 && selectedcountry1 === true){
                        selectedcountry1 === false;
                        d3.select(this).style("fill", '#20bf83');
                        counter--;
                    }



                    if(counter < 3){
                        d3.select(this).style("fill", '#0000FF');
                        document.getElementById("countryclicked").innerHTML = i.properties.name;
                        counter ++;
                        let countryID = i.id;
                        console.log(countryID);
                        if(countryID === "IRL"){getCurrent(countryID);
                        }
                    }
                    else{
                        document.getElementById("errorcountryclicked").innerHTML = "Error You can Only Select 2 Countries!!";
                    }


                    if(counter === 1){
                        selectedcountry1 = i.properties.name;
                    }

                    //If country is clicked twice
                    if(counter === 2){
                        selectedcountry2 = i.properties.name;
                        tempcountry = selectedcountry2;
                        // If clicked check if country is already selected if it is unselect.
                        //If it is not print site info to paragraph in site.
                        if (selectedcountry1 === selectedcountry2) {
                            // Code Below used to Deselect Colour
                            d3.select(this).style("fill", '#348C31');

                            counter = 0;
                        }

                        if(selectedcountry1 !== selectedcountry2){
                            document.getElementById("countryclicked").innerHTML = "Selected Countries = " + selectedcountry1 + " and " + selectedcountry2;
                        }

                        if(counter === 0)
                        {
                            selectedcountry1 = "";
                            selectedcountry2 = "";
                            tempcountry = "";
                        }

                    }
                    if (counter === 3 ){
                        // Code Below used to Deselect Colour
                        d3.select(this).style("fill", '#348C31');
                        counter =1;
                    }


                    console.log(selectedcountry1);
                    console.log(selectedcountry2);
                    console.log(tempcountry);
                    console.log(counter);
                })
                .style("stroke", "white")// Border Lines

        })

        function handleMouseOver(d, i) {
          //  console.log("Mouse Is On " + i.properties.name);
           //d3.select(this).style("fill", '#FFFFFF');
        }

        function increaseCounter(counter){
            counter++;
            return counter;
        }

        function handleMouseOut() {
           // console.log("Leaving Country")
        }

        // Function to Handle Button Click
        function clickHandler(d) {

        }

        // Function to Get Data from API and feed into the program
        async function getCurrent(countryID) {
            console.log("Get into API Function");

            // Make request to coronavirus api
            // Github for cleaned data https://github.com/covid19-eu-zh/covid19-eu-data-api
            const response = await fetch(
                `https://covid19-eu-data-api-gamma.vercel.app/api/countries?alpha2=ie&days=1`
            );

            // Data variable will store all data received from api call.
            const data = await response.json();
            console.log(data);

            // Declare Variable to Count total cases in all counties
            let CasesTotal = 0;
            CasesTotal = totalCountryCases(data);

            function totalCountryCases(data){
                for(let i = 0; i < data[0].records.length; i++ ){
                    CasesTotal = CasesTotal + data[0].records[i].cases;
                }
                return CasesTotal;
            }

            document.getElementById("apidata").innerHTML = "Cases in Ireland this Month = " + CasesTotal;

            return data;
    }
    </script>
</div>

<%- include('common/footer') %></body>
