<%- include('common/header') %>
<title>Home Title</title>
<script src="https://d3js.org/d3.v6.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
<link rel="stylesheet" type="text/css" href="stylesheets/index.css">
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap" rel="stylesheet">

<body>

<div class="home-page" id="home">
    <div class="mapcontainer">
        <div class="euro">
            <svg id="europeMap" class="europe-map" width="800" height="300"></svg>
        </div>
    </div>

    <div class="mapcontainer">
        <div class="infobox">
            <p id="countryclicked">Country clicked displays here.</p>
            <p id="errorcountryclicked"></p>
            <p id="apidata"></p>
            <p id="apidata2"></p>
        </div>
    </div>

    <div class="apicontainer">
        <div class="apidisplay">
            <p id="apitemp">
<!--                Api Info will be fully displayed here for testing-->
<!--                and in Later versions we will display the Graphs here-->
            </p>

            <p id="apitemp2"></p>
            <p id="apitemp3"></p>
        </div>
    </div>

    <div class='apicontainer'>
        <div class="graph1">
            <canvas id="chart1" width="200" height="200"></canvas>
        </div>
    </div>

</div>
<%- include('common/footer') %>
<!--&gt;>>>>>> ce4337f6b347568bb76be4ac7c978be7b43b1bfc-->
</div>

</body>
<%- include('common/footer') %>

<!--This is a D3.Js Map Created By Graham,Eduard and James-->
<!--as part of the Major Group Project.-->

<!--This Script Will be moved to a Script.Js File after testing.-->

<script>
    let countriesSelected = [];
    let initCountry = "";
    let graphdata = [];
    let graphdata2 = [];
    let labeldata = [];
    let labeldata2 = [];
    let namedata = [];
    let namedata2 = [];
    let chart;
    let temparray = [];
    let counter = 0;
    let trigger = false;
    chartIT();

    async function chartIT() {
        const ctx = document.getElementById('chart1').getContext('2d')
        chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labeldata,
                datasets: [{
                    label: namedata,
                    data: graphdata,
                    backgroundColor: ['rgba(0,100,255,0.27)'],
                    borderColor: ['rgb(0,0,0)',],
                    borderWidth: 2,
                    hoverOffset: 4,
                },{
                    label: namedata2,
                    data: graphdata2,
                    backgroundColor: ['rgba(255,0,0,0.37)'],
                    borderColor: ['rgb(0,0,0)',],
                    borderWidth: 2,
                    hoverOffset: 4,
                }
                ],
            },
        });
    }

    // Create an Svg variable
    const svg = d3.select("svg"),
        width = +svg.attr("width")

    // Map and projection
    const projection = d3.geoNaturalEarth1()
        .scale(width / 1.9) // Lower the num closer the zoom
        .translate([200, 550])  // (Horizontal, Vertical)

    // Load external data from geographic api and use data to project path info from map.
    d3.json("https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson").then(function (data) {
        svg.append("g")
            .selectAll("path")
            .data(data.features)
            .join("path")
            .attr("fill", "#348C31") // Color Of Country
            .attr("d", d3.geoPath().projection(projection))
            .on("mouseover", handleMouseOver)
            .on("mouseout", handleMouseOut)
            .on('click', function (d, i) {
                weatherHandler(i);


                if(countriesSelected.includes(i.properties.name) === true){
                    console.log("Sorry this exists already")
                    console.log(countriesSelected);
                    countriesSelected.pop(i.properties.name);
                    d3.select(this).style("fill", '#348C31');
                }
                else if(countriesSelected.includes(i.properties.name) === false){
                    d3.select(this).style("fill", '#03a5fd');
                    countriesSelected.push(i.properties.name);
                }



                document.getElementById("countryclicked").innerHTML = i.properties.name;
            })
            .style("stroke", "white")// Border Lines
    })

    function handleMouseOver(d, i) {
    }

    function handleMouseOut() {
    }

    async function getCurrentCovid(countryID) {
        const response = await fetch(
            "https://covid19-eu-data-api-gamma.vercel.app/api/countries?alpha2=ie&days=1"
        );

        // Data variable will store all data received from api call.
        const data = await response.json();
        // Declare Variable to Count total cases in all counties
        let CasesTotal = 0;
        CasesTotal = totalCountryCases(data);

        function totalCountryCases(data) {
            for (let i = 0; i < data[0].records.length; i++) {
                CasesTotal = CasesTotal + data[0].records[i].cases;
            }
            return CasesTotal;
        }

        document.getElementById("apidata").innerHTML = "Cases in Ireland this Month = " + CasesTotal;

        return data;
    }

    function weatherHandler(i){
        if(trigger === false){getCurrentWeather(i.properties.name, 1); trigger = true;}
        else getCurrentWeather(i.properties.name, 2);
        chart.update();
    }

    async function getCurrentWeather(countryName, gd) {
        // Make request to coronavirus api
        // WeatherAPI https://www.weatherapi.com/api-explorer.aspx
        if(gd === 1) {
            let url = "https://api.weatherapi.com/v1/forecast.json?key=687f508b47e247bdbd1113110221402&q=" + countryName + "&days=7&aqi=no&alerts=no";
            const response = await fetch(url);

            // Data variable will store all data received from api call.
            let apidata = await response.json();

            for (let i = 0; i < apidata.forecast.forecastday.length; i++) {
                let maxtemp = apidata.forecast.forecastday[i].day.maxtemp_c;
                let day = apidata.forecast.forecastday[i].date;
                graphdata.push(maxtemp);
                labeldata.push(day);
            }
            namedata.push(countryName);
            chart.update();
        }
        else if(gd === 2) {
            let url = "https://api.weatherapi.com/v1/forecast.json?key=687f508b47e247bdbd1113110221402&q="+countryName+"&days=7&aqi=no&alerts=no";
            const response = await fetch(url);
            // Data variable will store all data received from api call.
            let apidata = await response.json();
            for (let i = 0; i < apidata.forecast.forecastday.length; i++) {
                let maxtemp = apidata.forecast.forecastday[i].day.maxtemp_c;
                let day = apidata.forecast.forecastday[i].date;
                graphdata2.push(maxtemp);
                labeldata2.push(day);
            }
            if(namedata2.length === 0){namedata2.push(countryName)};
            chart.update();

            document.getElementById("apitemp").innerHTML = "Temperature in " + apidata.location.name + " Is = " + apidata.current.temp_c + " Degrees Celcius";
            document.getElementById("apitemp2").innerHTML = "The Wind in " + apidata.location.name + " Is Blowing at = " + apidata.current.gust_mph + " MPH";
            document.getElementById("apitemp3").innerHTML = "Todays forecast in " + apidata.location.name + " Is " + apidata.current.condition.text;
         }
    }

</script>
